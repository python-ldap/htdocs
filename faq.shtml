<!--#set var="head_title" value="FAQ" -->
<!--#set var="head_pagedescription" value="Frequently Asked Questions" -->
<!--#set var="base_path" value="" -->
<!--#set var="rcsid" value="\$Id: faq.shtml,v 1.26 2008/04/16 21:47:01 stroeder Exp $" -->
<!--#include file="ssi/head.shtml" -->
<!--#include file="ssi/navigation.shtml" -->

<ol>

<li>
<p>Q: Is python-ldap yet another abandon-ware project on SourceForge?</p>
<p>

A1: "Jump on in."<br>

A2: "Jump into the C ;-)"<br>

A3: <a href="http://sourceforge.net/project/stats/?group_id=2072&ugn=python-ldap">Not quite sure...</a><br>

A4: <a href="http://python-ldap.cvs.sourceforge.net/python-ldap/python-ldap/CHANGES?view=markup">CHANGES</a><br>

</p>
</li>

<li>
<p>Q: Can I use LDAPv2 via python-ldap?</p>
<p>A:
Yes, by explicitly setting the class attribute
<a href="http://python-ldap.sourceforge.net/doc/html/ldap.html#ldap.LDAPObject.protocol_version">
protocol_version</a>.
</p>
</li>

<li>
<p>Q: Can python-ldap be built against OpenLDAP 2.2 libs or older?</p>
<p>A: 
No, OpenLDAP 2.3 or newer is required. Patched builds of python-ldap
linked to older libs are not supported by the python-ldap project.
</p>
</li>

<li>
<p>Q: Can python-ldap 2.x be built against Netscape, Mozilla or Novell libs?</p>
<p>A: 
Nope.
</p>
</li>

<li>
<p>Q: During build there are warning messages displayed
telling Lib/ldap.py and Lib/ldap/schema.py are not found:
<pre>
warning: build_py: file Lib/ldap.py (for module ldap) not found
warning: build_py: file Lib/ldap/schema.py (for module ldap.schema) not found
</pre>
</p>
<p>A: 
ldap and ldap.schema are both module packages
(directories containing various sub-modules).
The messages above are falsely produced by DistUtils. Don't worry about it.
</p>
</li>

<li>
<p>
Q: My binary version of python-ldap was build with LDAP libs 3.3.
But the python-ldap docs say LDAP libs 2.x are needed. I'm confused!
</p>
<p>A:
This is a rather long story:<br>
E.g. some Win32 DLLs floating around for download are based on
the old Umich LDAP code which is not maintained anymore for a
couple of years. Last Umich 3.3 release was 1997 if I remember correctly.<br>
The OpenLDAP project took over the Umich code and started releasing
OpenLDAP 1.x series mainly fixing bugs and doing some improvements
to the database backend. Still only LDAPv2 was supported at server
and client side. (Many commercial vendors also derived their products
from the Umich code.)<br>
OpenLDAP 2.x is a full-fledged LDAPv3 implementation. Still it has
its roots in Umich code but has many more features/improvements.<br>

You cannot compile recent python-ldap 2.x against old Umich 3.3 or
OpenLDAP 1.x libs.

</p>
</li>

<li>
<p>Q: Does it work with Python (1.5|2.0|2.1|2.2)?</p>
<p>
A: The basic modules ldap and ldif should still work with Python 1.5
but python-ldap is not tested thoroughly with this version anymore.
Any other version since 2.0 should not be a problem at all.
</p>
</li>

<li>
<p>Q: Does it work with Windows 32?</p>
<p>
A: You can find links to pre-compiled packages for Win32 on the
<a href="download.shtml">download page</a>.
</p>
</li>

<li>
<p>Q: While importing module ldap there are undefined references reported.
Error message looks similar to this:
<pre>
Traceback (most recent call last):
  File "./ldap_connect", line 7, in ?
    import _ldap
ImportError: /usr/local/lib/libldap.so.2: undefined symbol: res_query
</pre>
</p>
<p>A: Especially on Linux systems you might have to explicitly link
against libresolv.
Tweak <em>setup.cfg</em> to contain this line:
<pre>
libs = lber ldap resolv
</pre>
</p>
</li>

<li>
<p>Q: While importing module ldap some shared lib files are not found.
Error message looks similar to this:
<pre>
    import ldap
  File "/usr/local/lib/python2.1/site-packages/ldap/__init__.py", line
5, in ?
    from _ldap import *
ImportError: ld.so.1: /usr/local/bin/python: fatal: liblber.so.2: open
failed: No such file or directory
</pre>
</p>
<p>A1:
You need to make sure that the path to <em>liblber.so.2</em> and
<em>libldap.so.2</em> is in your <em>LD_LIBRARY_PATH</em> environment
variable.
</p>
<p>A2: Alternatively if you're on Linux you can add the path to
<em>liblber.so.2</em> and <em>libldap.so.2</em> to /etc/ld.so.conf
and invoke ldconfig afterwards.
</p>
</li>

<li>
<p>Q: My code imports module <em>_ldap</em>. That used to work but with recent
version 2.0.0pre that does not work anymore?</p>
<p>
A:
Despite some outdated programming examples the extension module
<em>_ldap</em> <strong>SHOULD NOT</strong> be imported directly.
Import <em>ldap</em> instead which is a Python wrapper around <em>_ldap</em>
providing the full functionality.
</p>
</li>

<li>
<p>Q: python-ldap build with OpenLDAP libs prior to 2.1.3 and the following
error happens during import:</p>
<pre>
ImportError: /usr/lib/python2.2/site-packages/_ldap.so: undefined symbol:
ldap_first_reference
</pre>

<p>
A: In older OpenLDAP versions <em>libldap_r</em> was not complete. Either try
to build against (not re-entrant) <em>libldap</em> or use a newer OpenLDAP version
(see also <a href="http://www.openldap.org/lists/openldap-bugs/200207/msg00005.html">OpenLDAP ITS#1922</a>).
</p>
</li>

</ol>

<!--#include file="ssi/footer.shtml" -->
